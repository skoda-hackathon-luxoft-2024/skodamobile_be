name: Build and Push Docker Image

on:
  push:
    branches:
      - feature-add-cicd
  pull_request:
    branches:
      - feature-add-cicd

env:
  ACR_IMAGE_NAME: app

jobs:
  version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          useConfigFile: true
          versionSpec: "6.x"

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.0.0
        id: gitversion
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Set Version Output
        id: version
        run: echo "VERSION=${{ steps.gitversion.outputs.fullsemver }}" >> $GITHUB_OUTPUT

  build:
    name: Build Docker Image
    needs: [version]
    runs-on: ubuntu-latest
    environment: "STAGE"
    env:
      VERSION: ${{ needs.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:${{ env.VERSION }} .
          docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:${{ env.VERSION }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:latest
