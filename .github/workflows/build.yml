name: Build and Push Docker Image

on:
  push:
    branches:
      - feature-add-cicd
  pull_request:
    branches:
      - feature-add-cicd

env:
  ACR_IMAGE_NAME: app

jobs:
  version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: "6.x"

      - name: Determine version
        id: gitversion
        run: |
          gitversion /output json /showvariable FullSemVer
        continue-on-error: false
        shell: bash

      - name: Set Version Output
        id: version
        run: echo "version=${{ steps.gitversion.outputs.fullsemver }}" >> $GITHUB_ENV

  build:
    name: Build Docker Image
    needs: version
    runs-on: ubuntu-latest
    environment: "STAGE"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:${{ env.version }} .
          docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:${{ env.version }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:${{ env.version }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.ACR_IMAGE_NAME }}:latest
